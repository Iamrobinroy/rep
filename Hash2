# ===== SETTINGS =====
$DefaultGroupTag = "FinanceDept"  # Group Tag for all devices

# ===== INPUT FILE HANDLING =====
param (
    [Parameter(Mandatory=$true, ValueFromRemainingArguments=$true)]
    [string[]]$Files
)

if (-not $Files) {
    Write-Host "❌ Drag and drop your CSV file onto this script!" -ForegroundColor Red
    exit
}

foreach ($InputFile in $Files) {
    if (-not (Test-Path $InputFile)) {
        Write-Host "❌ File not found: $InputFile" -ForegroundColor Red
        continue
    }

    $OutputFile = [System.IO.Path]::Combine(
        [System.IO.Path]::GetDirectoryName($InputFile),
        ([System.IO.Path]::GetFileNameWithoutExtension($InputFile) + "_AutopilotReady.csv")
    )

    Write-Host "Processing $InputFile ..." -ForegroundColor Cyan

    # ===== MAPPING SECTION =====
    # Adjust these to match your input CSV headers
    $SerialCol    = "Serial No"
    $ProductIDCol = "Win Product Id"  # Can be blank in CSV
    $HashCol      = "Hash"
    $GroupTagCol  = ""                 # Leave blank if not present

    $data = Import-Csv $InputFile

    $csvOutput = $data | Select-Object `
        @{Name='Device Serial Number'; Expression = { $_.$SerialCol }},
        @{Name='Windows Product ID';    Expression = { if ($ProductIDCol -and $_.$ProductIDCol) { $_.$ProductIDCol } else { "" } }},
        @{Name='Hardware Hash';         Expression = { $_.$HashCol }},
        @{Name='Group Tag';             Expression = { 
            if ($GroupTagCol -and $_.$GroupTagCol) { $_.$GroupTagCol }
            else { $DefaultGroupTag }
        }}

    # Export as clean UTF-8 CSV without quotes
    $header = "Device Serial Number,Windows Product ID,Hardware Hash,Group Tag"
    $csvOutput | ForEach-Object {
        "$($_.'Device Serial Number'),$($_.'Windows Product ID'),$($_.'Hardware Hash'),$($_.'Group Tag')"
    } | Set-Content -Path $OutputFile -Encoding UTF8 -Force

    Write-Host "✅ Done! File saved to $OutputFile" -ForegroundColor Green
    Write-Host "   Group Tag applied: $DefaultGroupTag" -ForegroundColor Yellow
}
