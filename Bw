# ========================================
# Script: Remove Windows 10/11 Built-in Apps (Bloatware)
# Optimized for speed & logging
# ========================================

# Log file path
$LogFile = "C:\Windows\Temp\BloatwareRemoval.log"

# Function to log messages
function Write-Log {
    param([string]$Message)
    $Time = (Get-Date).ToString("yyyy-MM-dd HH:mm:ss")
    Add-Content -Path $LogFile -Value "$Time  $Message"
}

Write-Log "=== Bloatware removal started ==="

# List of common bloatware apps to remove (with comments for clarity)
$BloatwareApps = @(
    # Groove Music
    "Microsoft.ZuneMusic",

    # Movies & TV
    "Microsoft.ZuneVideo",

    # Weather
    "Microsoft.BingWeather",

    # Get Help
    "Microsoft.GetHelp",

    # Tips / Get Started
    "Microsoft.Getstarted",

    # 3D Viewer
    "Microsoft.Microsoft3DViewer",

    # Office Hub
    "Microsoft.MicrosoftOfficeHub",

    # Solitaire Collection
    "Microsoft.MicrosoftSolitaireCollection",

    # Sticky Notes
    "Microsoft.MicrosoftStickyNotes",

    # Mixed Reality Portal
    "Microsoft.MixedReality.Portal",

    # Paint 3D
    "Microsoft.MSPaint",

    # People
    "Microsoft.People",

    # Print 3D
    "Microsoft.Print3D",

    # Skype
    "Microsoft.SkypeApp",

    # Wallet
    "Microsoft.Wallet",

    # Alarms & Clock
    "Microsoft.WindowsAlarms",

    # Camera
    "Microsoft.WindowsCamera",

    # Maps
    "Microsoft.WindowsMaps",

    # Sound Recorder
    "Microsoft.WindowsSoundRecorder",

    # Xbox App
    "Microsoft.XboxApp",

    # Xbox Game Overlay
    "Microsoft.XboxGameOverlay",

    # Xbox Game Bar
    "Microsoft.XboxGamingOverlay",

    # Xbox Identity Provider
    "Microsoft.XboxIdentityProvider",

    # Xbox Speech to Text Overlay
    "Microsoft.XboxSpeechToTextOverlay",

    # Your Phone / Phone Link
    "Microsoft.YourPhone",

    # OneConnect
    "Microsoft.OneConnect",

    # New Outlook app
    "Microsoft.OutlookForWindows"
)

foreach ($app in $BloatwareApps) {
    Write-Log "Processing: $app"

    try {
        # Remove for all existing users
        $AppPackages = Get-AppxPackage -Name $app -AllUsers -ErrorAction SilentlyContinue
        if ($AppPackages) {
            $AppPackages | Remove-AppxPackage -AllUsers -ErrorAction SilentlyContinue
            Write-Log "Removed for all existing users: $app"
        } else {
            Write-Log "Not found for existing users: $app"
        }

        # Remove provisioned packages to stop future installs
        $ProvPackage = Get-AppxProvisionedPackage -Online | Where-Object DisplayName -EQ $app
        if ($ProvPackage) {
            Remove-AppxProvisionedPackage -Online -PackageName $ProvPackage.PackageName -ErrorAction SilentlyContinue | Out-Null
            Write-Log "Removed provisioned package: $app"
        } else {
            Write-Log "No provisioned package found: $app"
        }
    }
    catch {
        Write-Log "Error removing: $app - $_"
    }
}

Write-Log "=== Bloatware removal completed ==="
