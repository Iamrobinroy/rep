@echo off
REM ========================================================
REM Windows 10/11 Logging and Installation Script with Network Check & Admin Elevation
REM ========================================================

:: -----------------------------------
:: Self-elevate batch file to run as Administrator
:: -----------------------------------
net session >nul 2>&1
if %errorLevel% NEQ 0 (
    echo Requesting administrative privileges...
    powershell -Command "Start-Process '%~f0' -Verb runAs"
    exit /b
)

REM ------------------------------
REM Test network paths before proceeding
REM ------------------------------
set "NETWORK_PATHS=\\myserver-01\Share \\myserver-02\Share2"
echo Testing network connectivity...
set "ERRORFLAG=0"

for %%P in (%NETWORK_PATHS%) do (
    if not exist "%%P\" (
        echo ERROR: Network path %%P is not available!
        set "ERRORFLAG=1"
    ) else (
        echo Network path %%P is available.
    )
)

REM If any path failed, stop the script
if "%ERRORFLAG%"=="1" (
    echo One or more network paths are unavailable. Exiting script.
    pause
    exit
)

echo All network paths are available. Continuing...
echo.

REM ------------------------------
REM User prompt: In-Place Upgrade or New Device
REM ------------------------------
:ASKDEVICE
echo.
echo Is this an In-Place Upgrade or a New Device setup?
echo 1. In-Place Upgrade
echo 2. New Device
set /p DEVICECHOICE=Enter 1 or 2: 

REM Validate input
if "%DEVICECHOICE%"=="1" (
    set "DEVICETYPE=In-Place Upgrade"
) else if "%DEVICECHOICE%"=="2" (
    set "DEVICETYPE=New Device"
) else (
    echo Invalid choice. Please enter 1 or 2.
    goto ASKDEVICE
)

echo You selected: %DEVICETYPE%
echo.

REM ------------------------------
REM Set log folder based on device type
REM ------------------------------
if "%DEVICETYPE%"=="1" (
    set "LOGFOLDER=D:\Logs\InPlaceUpgrade"
) else (
    set "LOGFOLDER=D:\Logs\NewDevice"
)

REM Create log folder if it doesn't exist
if not exist "%LOGFOLDER%" mkdir "%LOGFOLDER%"

REM ------------------------------
REM Set hostname, username, date, and log file path
REM ------------------------------
set "HOSTNAME=%COMPUTERNAME%"
set "USERNAME=%USERNAME%"
for /f "tokens=1-4 delims=/: " %%a in ("%date% %time%") do set LOGDATE=%%a-%%b-%%c_%%d
set "LOGFILE=%LOGFOLDER%\%HOSTNAME%_%USERNAME%_%LOGDATE%.txt"

REM ------------------------------
REM Start logging
REM ------------------------------
echo Logging system info for %HOSTNAME% >> "%LOGFILE%"
echo Device type: %DEVICETYPE% >> "%LOGFILE%"
echo User: %USERNAME% >> "%LOGFILE%"
echo Date & Time: %date% %time% >> "%LOGFILE%"
echo Windows Version: %OS% >> "%LOGFILE%"
systeminfo | findstr /B /C:"OS Name" /C:"OS Version" >> "%LOGFILE%"
echo Architecture: %PROCESSOR_ARCHITECTURE% >> "%LOGFILE%"

REM Get IP addresses
for /f "tokens=2 delims=:" %%i in ('ipconfig ^| findstr /R "IPv4 Address"') do echo IP Address: %%i >> "%LOGFILE%"
echo. >> "%LOGFILE%"

REM ------------------------------
REM List mapped drives with UNC paths
REM ------------------------------
echo === Mapped Drives === >> "%LOGFILE%"
for /f "skip=1 tokens=1,2,3*" %%A in ('net use ^| findstr /R "^[A-Z]:"') do (
    REM %%A = Drive letter, %%C = UNC path
    echo Drive %%A mapped to %%C >> "%LOGFILE%"
)
echo. >> "%LOGFILE%"

REM ------------------------------
REM List installed applications (Win32 apps)
REM ------------------------------
echo === Installed Applications (Classic/Win32) === >> "%LOGFILE%"

REM 64-bit apps
for /f "tokens=*" %%A in ('reg query "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall" /s /v DisplayName 2^>nul') do (
    for /f "tokens=2*" %%B in ("%%A") do echo %%C >> "%LOGFILE%"
)

REM 32-bit apps on 64-bit system
for /f "tokens=*" %%A in ('reg query "HKLM\SOFTWARE\WOW6432Node\Microsoft\Windows\CurrentVersion\Uninstall" /s /v DisplayName 2^>nul') do (
    for /f "tokens=2*" %%B in ("%%A") do echo %%C >> "%LOGFILE%"
)
echo. >> "%LOGFILE%"

REM ------------------------------
REM List Microsoft Store Apps
REM ------------------------------
echo === Microsoft Store Apps === >> "%LOGFILE%"
powershell -NoProfile -Command "Get-AppxPackage | Select Name, Version | Format-Table -AutoSize" >> "%LOGFILE%" 2>&1
echo. >> "%LOGFILE%"

REM ------------------------------
REM Final message
REM ------------------------------
echo Log file created at "%LOGFILE%"
echo.

REM ------------------------------
REM Conditional continuation with confirmation
REM ------------------------------
if "%DEVICETYPE%"=="1" (
    REM In-Place Upgrade: confirm before starting Windows 11 installation
    echo.
    echo ==============================================
    echo WARNING: You are about to wipe and upgrade to 
    echo Windows 11 24H2 Enterprise LTSC.
    echo This action may remove existing data.
    echo ==============================================
    set /p CONFIRM="Do you want to continue? (Y/N): "
    
    if /i "%CONFIRM%"=="Y" (
        echo User confirmed. Starting Windows 11 installation...
        REM ===================================
        REM ADD YOUR WINDOWS 11 INSTALLATION COMMANDS BELOW
        REM Example:
        REM start /wait D:\InstallSource\setup.exe /auto upgrade /quiet /noreboot
        REM You can add multiple commands here as needed
        REM ===================================
    ) else (
        echo User cancelled the Windows 11 installation. Exiting script.
        pause
        exit
    )
) else (
    REM New Device: just log file and message
    echo Log file created, you may setup the new Surface 7 device
    pause
    exit
)
